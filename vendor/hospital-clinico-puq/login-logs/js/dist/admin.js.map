{"version":3,"sources":["webpack://@hospital-clinico-puq/flarum-login-logs/webpack/bootstrap","webpack://@hospital-clinico-puq/flarum-login-logs/./admin.js","webpack://@hospital-clinico-puq/flarum-login-logs/./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://@hospital-clinico-puq/flarum-login-logs/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@hospital-clinico-puq/flarum-login-logs/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@hospital-clinico-puq/flarum-login-logs/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@hospital-clinico-puq/flarum-login-logs/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://@hospital-clinico-puq/flarum-login-logs/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://@hospital-clinico-puq/flarum-login-logs/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://@hospital-clinico-puq/flarum-login-logs/./node_modules/@kurkle/color/dist/color.esm.js","webpack://@hospital-clinico-puq/flarum-login-logs/./node_modules/chart.js/auto/auto.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/core/core.animator.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/core/core.animation.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/core/core.animations.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/core/core.datasetController.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/controllers/controller.bar.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/controllers/controller.bubble.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/controllers/controller.doughnut.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/controllers/controller.line.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/controllers/controller.polarArea.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/controllers/controller.pie.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/controllers/controller.radar.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/controllers/controller.scatter.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/core/core.adapters.ts","webpack://@hospital-clinico-puq/flarum-login-logs/../src/core/core.interaction.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/core/core.layouts.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/platform/platform.base.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/platform/platform.basic.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/platform/platform.dom.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/platform/index.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/core/core.element.ts","webpack://@hospital-clinico-puq/flarum-login-logs/../src/core/core.scale.autoskip.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/core/core.scale.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/core/core.typedRegistry.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/core/core.registry.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/core/core.plugins.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/core/core.config.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/core/core.controller.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/elements/element.arc.ts","webpack://@hospital-clinico-puq/flarum-login-logs/../src/elements/element.line.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/elements/element.point.ts","webpack://@hospital-clinico-puq/flarum-login-logs/../src/elements/element.bar.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/plugins/plugin.colors.ts","webpack://@hospital-clinico-puq/flarum-login-logs/../src/plugins/plugin.decimation.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/plugins/plugin.filler/filler.segment.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/plugins/plugin.filler/filler.helper.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/plugins/plugin.filler/filler.options.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/plugins/plugin.filler/filler.target.stack.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/plugins/plugin.filler/simpleArc.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/plugins/plugin.filler/filler.target.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/plugins/plugin.filler/filler.drawing.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/plugins/plugin.filler/index.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/plugins/plugin.legend.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/plugins/plugin.title.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/plugins/plugin.subtitle.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/plugins/plugin.tooltip.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/scales/scale.category.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/scales/scale.linearbase.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/scales/scale.linear.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/scales/scale.logarithmic.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/scales/scale.radialLinear.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/scales/scale.time.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/scales/scale.timeseries.js","webpack://@hospital-clinico-puq/flarum-login-logs/../src/index.ts","webpack://@hospital-clinico-puq/flarum-login-logs/../../src/helpers/helpers.core.ts","webpack://@hospital-clinico-puq/flarum-login-logs/../../src/helpers/helpers.math.ts","webpack://@hospital-clinico-puq/flarum-login-logs/../../src/helpers/helpers.collection.ts","webpack://@hospital-clinico-puq/flarum-login-logs/../../src/helpers/helpers.extras.ts","webpack://@hospital-clinico-puq/flarum-login-logs/../../src/helpers/helpers.easing.ts","webpack://@hospital-clinico-puq/flarum-login-logs/../../src/helpers/helpers.color.ts","webpack://@hospital-clinico-puq/flarum-login-logs/../../src/core/core.animations.defaults.js","webpack://@hospital-clinico-puq/flarum-login-logs/../../src/core/core.layouts.defaults.js","webpack://@hospital-clinico-puq/flarum-login-logs/../../src/helpers/helpers.intl.ts","webpack://@hospital-clinico-puq/flarum-login-logs/../../src/core/core.ticks.js","webpack://@hospital-clinico-puq/flarum-login-logs/../../src/core/core.scale.defaults.js","webpack://@hospital-clinico-puq/flarum-login-logs/../../src/core/core.defaults.js","webpack://@hospital-clinico-puq/flarum-login-logs/../../src/helpers/helpers.canvas.ts","webpack://@hospital-clinico-puq/flarum-login-logs/../../src/helpers/helpers.options.ts","webpack://@hospital-clinico-puq/flarum-login-logs/../../src/helpers/helpers.config.ts","webpack://@hospital-clinico-puq/flarum-login-logs/../../src/helpers/helpers.curve.ts","webpack://@hospital-clinico-puq/flarum-login-logs/../../src/helpers/helpers.dom.ts","webpack://@hospital-clinico-puq/flarum-login-logs/../../src/helpers/helpers.interpolation.ts","webpack://@hospital-clinico-puq/flarum-login-logs/../../src/helpers/helpers.rtl.ts","webpack://@hospital-clinico-puq/flarum-login-logs/../../src/helpers/helpers.segment.js","webpack://@hospital-clinico-puq/flarum-login-logs/./src/admin/components/LoginLogsPage.js","webpack://@hospital-clinico-puq/flarum-login-logs/./src/admin/index.js","webpack://@hospital-clinico-puq/flarum-login-logs/external \"flarum.core.compat['admin/app']\"","webpack://@hospital-clinico-puq/flarum-login-logs/external \"flarum.core.compat['admin/components/ExtensionPage']\"","webpack://@hospital-clinico-puq/flarum-login-logs/external \"flarum.core.compat['admin/components/StatisticsPage']\""],"names":["_defineProperties","e","r","t","length","o","enumerable","configurable","writable","Object","defineProperty","toPropertyKey","key","_createClass","prototype","_extends","assign","bind","n","arguments","hasOwnProperty","call","apply","_inheritsLoose","create","constructor","setPrototypeOf","_setPrototypeOf","__proto__","toPrimitive","_typeof","Symbol","i","TypeError","String","Number","iterator","round","v","lim","l","h","Math","max","min","p2b","b2p","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","f","hex","concat","h1","h2","eq","isShort","g","hexParse","str","len","ret","alpha","hexString","undefined","HUE_RE","hsl2rgbn","s","k","hsv2rgbn","hwb2rgbn","w","rgb","hueValue","rgb2hsl","range","calln","Array","isArray","map","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","keys","tkeys","j","ok","nk","replace","parseInt","names","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","pow","from","interpolate","rgb1","rgb2","modHSL","ratio","tmp","clone","proto","fromObject","input","functionParse","charAt","Color","type","_rgb","_valid","_proto","mix","color","weight","c1","c2","w2","p","w1","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","get","set","obj","index_esm","Chart","register","registerables","Animator","_request","_charts","Map","_running","_lastDate","_notify","chart","anims","date","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","start","_refresh","_this","requestAnimFrame","window","_update","_this2","Date","now","remaining","running","items","draw","item","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","event","cb","push","add","_this$_getAnims$items","has","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","valid","number","Animation","cfg","target","prop","currentValue","resolve","_fn","_easing","effects","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","_proto2","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","_proto3","isObject","animationOptions","defaults","animation","animatedProps","getOwnPropertyNames","_i","_animationOptions","option","properties","_animateOptions","values","newOptions","options","resolveTargetOptions","animations","_createAnimations","$shared","awaitAll","$animations","then","props","value","size","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","y","top","right","bottom","left","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","found","isNumberFinite","sign","convertObjectDataToArray","data","meta","iScale","vScale","iAxisKey","axis","vAxisKey","adata","_adata$i","isStacked","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","_scale$getUserBounds","minDefined","maxDefined","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","_iterator","_createForOfIteratorHelperLoose","getMatchingVisibleMetas","_step","done","updateStacks","controller","parsed","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","createContext","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","_iterator2","_step2","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","_proto4","linkScales","addElements","fill","isPluginEnabled","console","warn","updateIndex","getDataset","chooseId","xid","xAxisID","valueOrDefault","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","unlistenArrayEvents","_dataCheck","isExtensible","listenArrayEvents","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","_parsed$i","_this$_parsing","_this$_parsing$xAxisK","xAxisKey","_this$_parsing$yAxisK","yAxisKey","resolveObjectKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","_getUserBounds","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","drawActiveElementsOnTop","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","elementType","_this3","cache","cacheKey","sharing","defined","datasetElementScopeKeys","prefixes","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","_iterator3","_step3","_step3$value","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","_arrayUnique","sort","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","isNullOrUndef","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","_borderProps","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","setInflateAmount","_ref","inflateAmount","BarController","_DatasetController2","_proto5","_this$_parsing2","_this$_parsing2$xAxis","_this$_parsing2$yAxis","bars","getBasePixel","_getRuler","_this$_getSharedOptio","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","grouped","currentParsed","iScaleValue","skipNull","find","isNaN","_iterator4","_step4","indexOf","_getStackCount","_getStackIndex","name","_startPixel","_endPixel","_this$_cachedMeta","_this$options","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","numbers","overrides","_index_","offset","grid","_value_","beginAtZero","BubbleController","_DatasetController3","_proto6","radius","points","_this$_cachedMeta2","_this$_getSharedOptio2","point","iPixel","vPixel","skip","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","TAU","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","_angleBetween","calcMin","maxX","maxY","HALF_PI","minX","PI","minY","DoughnutController","_DatasetController4","_this4","innerRadius","outerRadius","_proto7","getter","_this$_parsing$key","_getRotation","toRadians","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","_this$_getRotationExt","_getRatioAndOffset","maxWidth","maxHeight","maxRadius","toDimension","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_this$_getSharedOptio3","arc","metaData","formatNumber","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","descriptors","_scriptable","_indexable","startsWith","aspectRatio","plugins","legend","generateLabels","_chart$legend$options2","pointStyle","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","onClick","legendItem","toggleDataVisibility","LineController","_DatasetController5","_proto8","line","_meta$data","_dataset","animationsDisabled","_getStartAndCountOfVi","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_datasetIndex","_decimated","showLine","segment","animated","_this$_cachedMeta3","_this$_getSharedOptio4","_this$options2","spanGaps","maxGapLength","isNumber","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","_DatasetController6","_this5","_proto9","_parseObjectDataRadialScale","_updateRadius","_this6","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","_this7","_chart$legend$options3","angleLines","display","circular","pointLabels","PieController","_DoughnutController2","RadarController","_DatasetController7","_proto10","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","_DatasetController8","_proto11","_meta$data2","_getStartAndCountOfVi2","registry","getElement","_this$_cachedMeta4","_this$options3","interaction","abstract","Error","DateAdapterBase","override","members","_proto12","init","formats","format","diff","startOf","endOf","adapters","_date","binarySearch","metaset","intersect","lookupMethod","_reversePixels","_rlookupByKey","_lookupByKey","el","getRange","lo","hi","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","_metasets$i","_binarySearch","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","evaluationFunc","_isPointInArea","inRange","getNearestRadialItems","_element$getProps","getProps","_getAngleFromPoint","getAngleFromPoint","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","getRelativePosition","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","_box","_box$options","_box$options$stackWei","buildStacks","layouts","_iterator5","_step5","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","changed","_updateDims","setBoxDims","placeBoxes","userPadding","padding","_iterator6","_step6","addBox","_layers","z","removeBox","layoutItem","minPadding","toPadding","verticalBoxes","horizontalBoxes","each","beforeLayout","visibleVerticalBoxCount","BasePlatform","_proto13","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","_BasePlatform","_proto14","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","readUsedSize","displayHeight","eventListenerOptions","supportsEventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","_getRelativePosition","nodeListContains","nodeList","_iterator7","_step7","contains","createAttachObserver","observer","MutationObserver","entries","trigger","_iterator8","_step8","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","_iterator9","_step9","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","_getParentNode","throttled","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","_BasePlatform2","_proto15","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","_isDomSupported","OffscreenCanvas","Element","_proto16","tooltipPosition","_this$getProps","hasValue","final","_this8","defaultRoutes","autoSkip","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","tickLength","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","_factorize","result","ceil","majorStart","majorEnd","reverseAlign","align","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","drawTicks","getTitleHeight","fallback","font","toFont","lines","lineHeight","createScaleContext","createTickContext","titleAlign","_toLeftRightCenter","titleArgs","titleX","titleY","_alignStartEnd","positionAxisID","Scale","_Element2","_this9","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","_proto17","setContext","suggestedMin","suggestedMax","finiteOrDefault","_this$getUserBounds","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","callback","margins","_this$options4","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","_limitValue","title","toDegrees","asin","_this$options5","titleOpts","gridOpts","titleHeight","_this$_getLabelSizes","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","_this$options6","_this$options6$ticks","isRotated","labelsBelowTicks","offsetLeft","offsetRight","_this$options7","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","jlen","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","_measureText","valueAt","idx","pixel","decimal","_int16Range","_alignPixel","getDecimalForPixel","getBaseValue","optionTicks","rot","autoSkipPadding","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","tickTextAlign","showLabelBackdrop","backdrop","labelPadding","backdropPadding","backdropColor","translation","_this$options8","_this$options9","_this$options9$ticks","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","_this$options10","lastLineWidth","drawLabels","clipArea","_iterator10","_step10","renderTextOptions","renderText","unclipArea","drawTitle","_this$options11","_titleArgs","_this10","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","_proto18","isForType","isPrototypeOf","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","merge","routeDefaults","describe","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","Registry","controllers","_typedRegistries","_proto19","_len","_key","_each","_len2","_key2","addControllers","_len3","_key3","_len4","_key4","addPlugins","_len5","_key5","addScales","_len6","_key6","getController","_get","getPlugin","getScale","removeControllers","_len7","_key7","removeElements","_len8","_key8","removePlugins","_len9","_key9","removeScales","_len10","_key10","typedRegistry","_this11","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","_capitalize","PluginService","_init","_proto20","notify","hook","_createDescriptors","_descriptors","_iterator11","_step11","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","local","getOpts","_ref2","_iterator12","_step12","pluginOpts","_ref3","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","_len11","scaleOptions","_key11","_i3","_scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","defaultId","defaultScaleOptions","mergeIf","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","_proto21","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","_getResolver","getResolver","resolver","subPrefixes","needContext","isFunction","subResolver","_attachContext","_iterator13","_step13","descriptorDefaults","_getResolver2","platform","resolverCache","_createResolver","hasFunction","_descriptors2","isScriptable","isIndexable","_iterator14","_step14","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","_i4","_keys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","userConfig","_this12","initialCanvas","existingChart","uid","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","_initialize","invalidatePlugins","_proto22","responsive","retinaScale","bindEvents","clearCanvas","_resize","_resizeBeforeDraw","maintainAspectRatio","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","_this13","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","slice","_removeUnreferencedMetasets","_this14","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_defaults$datasets$ty","_resetElements","_this15","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_this$getDatasetMeta","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","_this16","existingEvents","newEvents","events","setsEqual","unbindEvents","changes","_getUniformDataChanges","_iterator15","_step15","_step15$value","datasetCount","makeSet","changeSet","_this17","noArea","_this17$_layers","_idx","_updateDataset","_this$_resizeBeforeDr","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","_this$canvas","toDataURL","bindUserEvents","bindResponsiveEvents","_this18","_add","_this19","_remove","detached","_this20","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","_this21","lastActive","_ref4","_elementsEqual","pluginId","replay","hoverOptions","hover","deactivated","activated","_this22","eventFilter","_handleEvent","_this$_active","_getActiveElements","_isClickEvent","onHover","_this$options12","version","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","_readValueToProps","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","_parseBorderRadius$","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","borderJoinStyle","inner","lineJoin","ArcElement","_Element3","_this23","_proto23","chartX","chartY","_getAngleFromPoint2","_this$getProps2","rAdjust","nonZeroBetween","betweenAngles","withinRadius","_isBetween","_this$getProps3","_this$options13","halfAngle","halfRadius","translate","fix","radiusOffset","setStyle","lineCap","borderCapStyle","previous","getLineMethod","stepped","_steppedLineTo","tension","cubicInterpolationMode","_bezierCurveTo","pathVars","_params","_params$start","paramsStart","_params$end","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","_pathVars","lineMethod","_ref5","_ref5$move","fastPathSegment","_pathVars2","_ref6","_ref6$move","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","_steppedInterpolation","_bezierInterpolation","_pointInLine","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","_iterator16","_step16","usePath2D","LineElement","_Element4","_this24","_points","_segments","_pointsUpdated","_proto24","_updateBezierControlPoints","_boundSegments","_interpolate","_segments$i","interpolated","_iterator17","_step17","_computeSegments","capBezierPoints","inRange$1","_el$getProps","hitRadius","PointElement","_Element5","_this25","_proto25","mouseX","mouseY","_this$getProps4","inXRange","inYRange","_this$getProps5","hoverRadius","drawPoint","getBarBounds","bar","_bar$getProps","half","skipOrLimit","parseBorderWidth","maxW","maxH","toTRBL","parseBorderRadius","_bar$getProps2","toTRBLCorners","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","bounds","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","amount","refRect","BarElement","_Element6","_this26","_proto26","_this$options14","_boundingRects","addRectPath","addRoundedRectPath","_this$getProps6","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","containsColorsDefinition","containsDefaultColorsDefenitions","plugin_colors","forceOverride","_args","_chart$config","chartOptions","containsColorDefenition","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","_data$a","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","pointCount","_iScale$getUserBounds","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","_getStartAndCountOfVi3","threshold","tpoints","_iterator18","_step18","_findSegmentEnd","_getBounds","targetSegments","_iterator19","_step19","tgt","subBounds","fillSources","_boundSegment","_iterator20","_step20","_end","fillSource","_getEdge","_normalizeAngle","_pointsFromSegments","boundary","_ref7","_ref7$x","_ref7$y","linePoints","_ref8","_createBoundaryLine","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","parseFillOption","parseFloat","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","_findPoint","findPoint","pointValue","firstValue","lastValue","simpleArc","_proto27","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_source$scale","_drawfill","lineOpts","_ref9","_ref9$above","above","_ref9$below","doFill","clipVertical","clipY","lineLoop","_iterator21","_step21","_iterator22","_step22","_step22$value","src","_src$style","_src$style2","_src$style2$backgroun","notShape","clipBounds","interpolatedLineTo","targetLoop","_scale$chart$chartAre","_ref10","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","_labelOpts$boxHeight","boxHeight","_labelOpts$boxWidth","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_Element7","_this27","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","_proto28","buildLabels","_this28","labelFont","_computeTitleHeight","_getBoxSize","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","_calculateItemSize","calculateItemSize","adjustHitBoxes","_this$options15","rtl","rtlHelper","getRtlAdapter","_iterator23","_step23","hitbox","leftForLtr","_iterator24","_step24","_draw","_this29","defaultColor","halfFontSize","cursor","_getBoxSize2","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","drawPointLegend","yBoxTop","xBoxLeft","fillText","strikethrough","overrideTextDirection","textDirection","textWidth","setWidth","realX","_textX","fontLineHeight","calculateLegendItemHeight","restoreTextDirection","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_element","afterEvent","ci","_chart$legend$options","useBorderRadius","Title","_Element8","_this30","_padding","_proto29","textSize","_drawArgs","fontOpts","_this$_drawArgs","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","xSet","xAverage","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","_controller$getLabelA","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","_chart$chartArea","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","_toTRBLCorners","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","noop","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","_Element9","_this31","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","_proto30","getTitle","getBeforeBody","getBody","_this32","bodyItems","scoped","getAfterBody","getFooter","_createItems","_this33","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","_toTRBLCorners2","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","_toTRBLCorners3","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","_this34","_ref11","positionChanged","_positionChanged","_ignoreReplayEvents","_this35","plugin_tooltip","afterInit","afterDraw","_fallback","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_Scale","_this36","_startValue","_valueRange","_addedLabels","_proto31","added","_iterator25","_step25","_step25$value","isFinite","_this$getUserBounds2","_this$getMinMax","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceNum","niceMin","niceMax","numSpaces","almostWhole","almostEquals","decimalPlaces","_decimalPlaces","relativeLabelSize","tickValue","_ref12","rad","LinearScaleBase","_Scale2","_this37","_endValue","_proto32","handleTickRangeOptions","_this$getUserBounds3","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","_setMinAndMaxByKey","LinearScale","_LinearScaleBase","_proto33","_this$getMinMax2","Ticks","formatters","numeric","log10Floor","log10","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","generateTicks","_ref13","minExp","exp","significand","lastTick","LogarithmicScale","_Scale3","_this38","_proto34","_zero","_this$getMinMax3","_this$getUserBounds4","logarithmic","getTickBackdropHeight","measureLabelSize","_longestText","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","apexesInArea","_opts$pointLabels","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","_LinearScaleBase2","_this39","_proto35","_this$getMinMax4","_this40","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","_this$_pointLabelItem","_this$options16","_this41","_this42","animate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","_scale$_parseOpts","_parseOpts","parser","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","_lookup2","_lookup","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_Scale4","_this43","_unit","_majorUnit","_offsets","_normalized","_proto36","displayFormats","normalized","_this$getUserBounds5","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","_lookupByKey2","_table$lo","_table$hi","_lookupByKey3","_table$lo2","_table$hi2","span","TimeSeriesScale","_TimeScale2","_this44","_table","_minPos","_tableRange","_proto37","_getTimestampsForTable","buildLookupTable","toString","defaultValue","dimension","endsWith","thisArg","loopable","a0","a1","klen","isValidKey","_merger","tval","sval","merger","current","_mergerIf","_deprecated","keyResolvers","_","_splitKey","part","_getKeyResolver","toUpperCase","PITAU","INFINITY","RAD_PER_DEG","QUARTER_PI","TWO_THIRDS_PI","roundedRange","niceRange","fraction","niceFraction","rounded","degrees","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","atan2","_angleDiff","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","cmp","mid","ti","arrayEvents","_chartjs","object","stub","pixelSize","fontStyle","fontFamily","requestAnimationFrame","argsToUse","ticking","timeout","clearTimeout","setTimeout","check","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","atEdge","elasticIn","elasticOut","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","colors","applyAnimationsDefaults","applyLayoutsDefaults","intlCache","getNumberFormat","JSON","stringify","Intl","NumberFormat","num","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","applyScaleDefaults","getScope$1","root","Defaults","_appliers","family","hoverBackgroundColor","hoverBorderColor","hoverColor","_Object$definePropert","scopeObject","targetScopeObject","privateName","defineProperties","appliers","toFontString","longest","arrayOfThings","thing","nestedThing","halfWidth","resetTransform","clearRect","xOffset","yOffset","xOffsetW","yOffsetW","drawImage","ellipse","SQRT1_2","flip","midpoint","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","setRenderOpts","decorateText","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","drawBackdrop","oldColor","strokeText","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","objProps","read","inputs","info","cacheable","minmax","keepZero","parentContext","rootScopes","getTarget","finalRootScopes","_resolve","toStringTag","_scopes","_rootScopes","Proxy","deleteProperty","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getKeysFromAllScopes","ownKeys","storage","_storage","subProxy","_context","_subProxy","receiver","_resolveWithContext","_proxy$_scriptable","_proxy$_indexable","_proxy$_allKeys","_allKeys","readKey","needsSubResolver","_resolveScriptable","_resolveArray","getValue","createSubResolver","resolveFallback","getScope","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","getValueAxis","splineCurve","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","splineCurveMonotone","slopeDelta","capControlPoint","inArea","inAreaPrev","inAreaNext","controlPoints","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","ownerDocument","defaultView","getPropertyValue","getPositionedStyle","styles","suffix","useOffsetPos","shadowRoot","getCanvasPosition","touches","getBoundingClientRect","clientX","clientY","borderBox","paddings","borders","_getCanvasPosition","getContainerSize","clientHeight","containerStyle","containerBorder","containerPadding","round1","bbWidth","bbHeight","containerSize","maintainHeight","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","passiveSupported","cp1","cp2","getRightToLeftAdapter","rectX","getLeftToRightAdapter","_itemWidth","direction","original","getPropertyPriority","setProperty","prevTextDirection","propertyFn","between","compare","normalizeSegment","getSegment","startBound","endBound","_propertyFn","_propertyFn2","_getSegment","inside","subStart","prevValue","startIsBefore","endIsBefore","shouldStart","shouldStop","sub","findStartAndEnd","solidSegments","segmentOptions","_findStartAndEnd","splitByStyles","completeLoop","doSplitByStyles","chartContext","baseStyle","readStyle","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","replacer","LoginLogsPage","_ExtensionPage","oninit","vnode","selectedTimeRange","selectedStartDate","selectedEndDate","selectedUser","graphData","currentPage","itemsPerPage","fetchData","url_stats","app","forum","attribute","filters","url_logs","request","url","response","logs","redraw","url_total","users","user","username","attributes","waitForCanvasAndCreateChart","setInterval","chartElement","clearInterval","createChart","log","logins","chartInstance","content","totalPages","visibleLogs","className","onchange","logged_in_at","logged_out_at","onclick","tempPage","oninput","onkeydown","pageNumber","inputmode","pattern","autocomplete","ExtensionPage","initializers","extensionData","registerPage"],"mappings":"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","file":"admin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./admin.js\");\n","export * from './src/admin';\r\n","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(e, r) {\n  for (var t = 0; t < r.length; t++) {\n    var o = r[t];\n    o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, toPropertyKey(o.key), o);\n  }\n}\nfunction _createClass(e, r, t) {\n  return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", {\n    writable: !1\n  }), e;\n}\nexport { _createClass as default };","function _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nexport { _extends as default };","import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inheritsLoose(t, o) {\n  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, setPrototypeOf(t, o);\n}\nexport { _inheritsLoose as default };","function _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nexport { _setPrototypeOf as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  let found = false;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      found = true;\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n\n  if (!found && !options.all) {\n    return 0;\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n      meta._stacked = isStacked(meta.vScale, meta);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n    const iScaleValue = currentParsed && currentParsed[iScale.axis];\n\n    const skipNull = (meta) => {\n      const parsed = meta._parsed.find(item => item[iScale.axis] === iScaleValue);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      // https://github.com/chartjs/Chart.js/issues/11333\n      if (!this.datasetElementType) {\n        this.addElements();\n      }\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    } else if (this.datasetElementType) {\n      // https://github.com/chartjs/Chart.js/issues/11333\n      delete meta.dataset;\n      this.datasetElementType = false;\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta, chartArea) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      // Unset pending resize request now to avoid possible recursion within _resize\n      this._resizeBeforeDraw = null;\n      this._resize(width, height);\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta, this.chartArea);\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the event inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n    const betweenAngles = _circumference >= TAU || nonZeroBetween;\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {DoughnutController, PolarAreaController, defaults} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nfunction containsDefaultColorsDefenitions() {\n  return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    const containsColorDefenition = (\n      containsColorsDefinitions(datasets) ||\n      containsColorsDefinition(chartOptions) ||\n      (elements && containsColorsDefinitions(elements)) ||\n      containsDefaultColorsDefenitions());\n\n    if (!options.forceOverride && containsColorDefenition) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    // No visible items where found, return false so we don't have to divide by 0 which reduces in NaN\n    if (count === 0 || xSet.size === 0) {\n      return false;\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash || []);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n    * Generates all timestamps defined in the data.\n    * Important: this method can return ticks outside the min and max range, it's the\n    * responsibility of the calling code to clamp values if needed.\n    * @protected\n    */\n  _generate() {\n    const min = this.min;\n    const max = this.max;\n    let timestamps = super.getDataTimestamps();\n    if (!timestamps.includes(min) || !timestamps.length) {\n      timestamps.splice(0, 0, min);\n    }\n    if (!timestamps.includes(max) || timestamps.length === 1) {\n      timestamps.push(max);\n    }\n    return timestamps.sort((a, b) => a - b);\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || value === undefined;\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas?: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  if (!ctx && !canvas) {\n    return;\n  }\n\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n","import ExtensionPage from 'flarum/admin/components/ExtensionPage';\r\nimport Chart from 'chart.js/auto';\r\n\r\nexport default class LoginLogsPage extends ExtensionPage {\r\n  oninit(vnode) {\r\n    super.oninit(vnode);\r\n    this.selectedTimeRange = 'day'; // Default: Day\r\n    this.selectedStartDate = null;\r\n    this.selectedEndDate = null;\r\n    this.selectedUser = null;\r\n    this.graphData = null;\r\n    //this.logs = [];\r\n    //this.users = [];\r\n    //this.total = [];\r\n    this.currentPage = 1;\r\n    this.itemsPerPage = 10;\r\n\r\n    // Fetch data for the table and graph\r\n    this.fetchData();\r\n  }\r\n\r\n  fetchData() {\r\n    // Create filters based on selected options\r\n    let url_stats = app.forum.attribute('apiUrl') + '/loginLogStats';\r\n    const filters = [];\r\n\r\n    let offset = (this.currentPage - 1) * this.itemsPerPage;\r\n\r\n    if (this.selectedTimeRange) filters.push(`timeRange=${this.selectedTimeRange}`);\r\n    if (this.selectedStartDate) filters.push(`startDate=${this.selectedStartDate}`);\r\n    if (this.selectedEndDate) filters.push(`endDate=${this.selectedEndDate}`);\r\n    if (this.selectedUser) filters.push(`user=${this.selectedUser}`);\r\n\r\n    let url_logs = app.forum.attribute('apiUrl') + '/loginLogs';\r\n\r\n    if (filters.length) url_logs += '?' + filters.join('&');\r\n    url_logs += '&offset=' + offset;\r\n\r\n    // Fetch logs for the table (implement similar filtering for logs if needed)\r\n    app.request({\r\n      method: 'GET',\r\n      url: url_logs,\r\n    }).then((response) => {\r\n      this.logs = response.data;\r\n      m.redraw();\r\n    });\r\n\r\n    let url_total = app.forum.attribute('apiUrl') + '/loginLogsTotal';\r\n    if (filters.length) url_total += '?' + filters.join('&');\r\n\r\n    app.request({\r\n      method: 'GET',\r\n      url: url_total,\r\n    }).then((response) => {\r\n      this.total = response.data;\r\n      m.redraw();\r\n    });\r\n\r\n\r\n    app.request({\r\n      method: 'GET',\r\n      url: app.forum.attribute('apiUrl') + '/users',\r\n    }).then((response) => {\r\n      this.users = response.data.map(user => ({\r\n        id: user.id,\r\n        username: user.attributes.username,\r\n      }));\r\n      m.redraw();\r\n    });\r\n\r\n    if (filters.length) url_stats += '?' + filters.join('&');\r\n\r\n    // Fetch data\r\n    app.request({\r\n      method: 'GET',\r\n      url: url_stats,\r\n    }).then((response) => {\r\n      this.graphData = response.data;\r\n      m.redraw();\r\n      this.waitForCanvasAndCreateChart();\r\n    });\r\n  }\r\n\r\n  waitForCanvasAndCreateChart() {\r\n    const interval = setInterval(() => {\r\n      const chartElement = document.getElementById('loginsChart');\r\n      if (chartElement) {\r\n        clearInterval(interval);\r\n        const ctx = chartElement.getContext('2d');\r\n        if (ctx) {\r\n          this.createChart(ctx); // Call your chart creation logic\r\n        }\r\n      }\r\n    }, 100); // Check every 100ms\r\n  }\r\n\r\n  createChart(ctx) {\r\n    if (!this.graphData) return;\r\n\r\n    // Extract labels and data for the chart\r\n    const labels = this.graphData.map((log) => log.attributes.date);\r\n    const data = this.graphData.map((log) => log.attributes.logins);\r\n\r\n    if (this.chartInstance) {\r\n      this.chartInstance.destroy();\r\n    }\r\n\r\n    this.chartInstance = new Chart(ctx, {\r\n      type: 'line',\r\n      data: {\r\n        labels: labels,\r\n        datasets: [{\r\n          label: 'Logins per Day',\r\n          data: data,\r\n          backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n          borderColor: 'rgba(75, 192, 192, 1)',\r\n          borderWidth: 1,\r\n        }],\r\n      },\r\n      options: {\r\n        scales: {\r\n          y: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  content() {\r\n    if (!this.users || !this.logs || !this.total) {\r\n      return <div>Cargando...</div>; // Show loading while data is being fetched\r\n    }\r\n    console.log(this.users);\r\n    console.log(this.logs);\r\n    console.log(this.total);\r\n\r\n    const totalPages = Math.ceil(this.total[0].attributes.total / this.itemsPerPage);\r\n    const start = (this.currentPage - 1) * this.itemsPerPage;\r\n    const end = start + this.itemsPerPage;\r\n    const visibleLogs = this.logs.slice(start, end);\r\n\r\n    console.log(totalPages);\r\n    console.log(this.currentPage);\r\n    return (\r\n      <div className=\"LoginLogsPage\">\r\n        <div className=\"container\">\r\n          {/* Register List */}\r\n          <h2>Login Logs</h2>\r\n          <div style=\"display: flex; gap: 10px; width: 30%; margin-bottom: 5px;\">\r\n\r\n            <input type=\"date\" class=\"FormControl FormControl\"  onchange={(event) => {\r\n              this.selectedStartDate = event.target.value;\r\n              this.fetchData();\r\n            }}/>\r\n\r\n            <input type=\"date\" class=\"FormControl FormControl\" onchange={(event) => {\r\n              this.selectedEndDate = event.target.value;\r\n              this.fetchData();\r\n            }}/>\r\n\r\n            {this.users.length > 0 && (\r\n              <span class=\"Select\">\r\n              <select class=\"Select-input FormControl\" onchange={(event) => {\r\n                this.selectedUser = event.target.value;\r\n                this.fetchData();\r\n              }}>\r\n              <option value=\"\">Todos los usuarios</option>\r\n                {this.users.map((user) => (\r\n                  <option value={user.id}>{user.username}</option>\r\n                ))}\r\n              </select>\r\n            </span>\r\n            )}\r\n          </div>\r\n            <table className=\"DashboardWidget Widget LoginLogsTable\">\r\n              <thead>\r\n              <tr>\r\n                <th>Usuario</th>\r\n                <th>Tiempo de conexión</th>\r\n                <th>Tiempo de desconexión</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              {this.logs.map((log) => (\r\n                <tr>\r\n                  <td>{log.attributes.username}</td>\r\n                  <td>{log.attributes.logged_in_at}</td>\r\n                  <td>{log.attributes.logged_out_at || 'N/A'}</td>\r\n                </tr>\r\n              ))}\r\n              </tbody>\r\n            </table>\r\n            {/* Pagination Controls */}\r\n            <div className=\"pagination-controls\">\r\n              <nav class=\"UserListPage-gridPagination\">\r\n                <button onclick={() => {\r\n                  this.currentPage = 1;\r\n                  this.tempPage = this.currentPage;\r\n                  this.fetchData();\r\n                }}\r\n                        disabled={this.currentPage === 1} class=\"Button Button--icon UserListPage-firstPageBtn hasIcon\"\r\n                        type=\"button\"\r\n                        aria-label=\"core.admin.users.pagination.first_page_button\"><i aria-hidden=\"true\"\r\n                                                                                      class=\"icon fas fa-step-backward Button-icon\"></i><span\r\n                  class=\"Button-label\"></span></button>\r\n                <button onclick={() => {\r\n                  this.currentPage -= 1\r\n                  this.tempPage = this.currentPage;\r\n                  this.fetchData();\r\n                }}\r\n                        disabled={this.currentPage === 1}\r\n                        class=\"Button Button--icon UserListPage-backBtn hasIcon\" type=\"button\"\r\n                        aria-label=\"Previous page\"><i aria-hidden=\"true\"\r\n                                                      class=\"icon fas fa-chevron-left Button-icon\"></i><span\r\n                  class=\"Button-label\"></span></button>\r\n                <span class=\"UserListPage-pageNumber\">Página <input\r\n                  oninput={(event) => {\r\n                    this.tempPage = event.target.value; // Track the temporary input value\r\n                  }}\r\n                  onkeydown={(event) => {\r\n                    if (event.key === \"Enter\") {\r\n                      const pageNumber = parseInt(this.tempPage, 10); // Use the temporary value\r\n                      if (!isNaN(pageNumber)) {\r\n                        this.currentPage = pageNumber;\r\n                        this.fetchData();\r\n                      } else if (this.tempPage === \"\") {\r\n                        this.tempPage = null; // Allow empty input without triggering\r\n                      }\r\n                    }\r\n                  }}\r\n                  type=\"text\"\r\n                  inputmode=\"numeric\"\r\n                  pattern=\"[0-9]*\"\r\n                  aria-label=\"Go directly to page number\"\r\n                  autocomplete=\"off\"\r\n                  class=\"FormControl UserListPage-pageNumberInput\"\r\n                  value={this.tempPage !== undefined ? this.tempPage : this.currentPage}\r\n                /> de {totalPages}</span>\r\n                <button onclick={() => {\r\n                  this.currentPage += 1;\r\n                  this.tempPage = this.currentPage;\r\n                  this.fetchData();\r\n                }}\r\n                        disabled={this.currentPage === totalPages}\r\n                        class=\"Button Button--icon UserListPage-nextBtn hasIcon\" type=\"button\"\r\n                        aria-label=\"Next page\"><i aria-hidden=\"true\"\r\n                                                  class=\"icon fas fa-chevron-right Button-icon\"></i><span\r\n                  class=\"Button-label\"></span></button>\r\n                <button onclick={() => {\r\n                  this.currentPage = totalPages;\r\n                  this.tempPage = this.currentPage;\r\n                  this.fetchData();\r\n                }}\r\n                        disabled=\"\" class=\"Button Button--icon UserListPage-lastPageBtn hasIcon\" type=\"button\"\r\n                        aria-label=\"core.admin.users.pagination.last_page_button\"><i aria-hidden=\"true\"\r\n                                                                                     class=\"icon fas fa-step-forward Button-icon\"></i><span\r\n                  class=\"Button-label\"></span></button>\r\n              </nav>\r\n            </div>\r\n            {/* Graph */}\r\n            <h2>Logins Chart</h2>\r\n            <div>\r\n              <canvas id=\"loginsChart\"></canvas>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        );\r\n        }\r\n\r\n        }\r\n","import app from 'flarum/admin/app';\r\nimport StatisticsPage from 'flarum/admin/components/StatisticsPage';\r\nimport LoginLogsPage from './components/LoginLogsPage';\r\n\r\napp.initializers.add('hospital-clinico-puq-login-logs', () => {\r\n  app.extensionData\r\n    .for('hospital-clinico-puq-login-logs')\r\n    .registerPage(LoginLogsPage);\r\n  console.log('Login Logs admin extension asdinitialized');\r\n});\r\n","module.exports = flarum.core.compat['admin/app'];","module.exports = flarum.core.compat['admin/components/ExtensionPage'];","module.exports = flarum.core.compat['admin/components/StatisticsPage'];"],"sourceRoot":""}